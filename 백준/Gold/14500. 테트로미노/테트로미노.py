# 14500 테트로미노
tet =[[(0,0),(0,1),(0,2),(0,3)],\
        [(0,0),(1,0),(2,0),(3,0)],\
        [(0,0),(1,0),(0,1),(1,1)],\
        [(0,0),(1,0),(2,0),(2,1)],\
        [(0,1),(1,1),(2,1),(2,0)],\
        [(0,0),(0,1),(1,1),(2,1)],\
        [(0,0),(0,1),(1,0),(2,0)],\
        [(0,0),(1,0),(1,1),(1,2)],\
        [(0,2),(1,1),(1,2),(1,0)],\
        [(0,0),(0,1),(0,2),(1,2)],\
        [(0,0),(1,0),(0,1),(0,2)],\
        [(0,0),(1,0),(1,1),(2,1)],\
        [(0,1),(1,1),(1,0),(2,0)],\
        [(1,0),(1,1),(0,1),(0,2)],\
        [(0,0),(0,1),(1,1),(1,2)],\
        [(0,1),(1,0),(1,1),(1,2)],\
        [(0,0),(0,1),(0,2),(1,1)],\
        [(0,0),(1,0),(1,1),(2,0)],\
        [(0,1),(1,1),(1,0),(2,1)]]

N, M = map(int, input().split(" "))
graph = []
for i in range(N):
  graph.append(list(map(int, (input().split(" ")))))

#print(graph)

curMax = 0

for i in range(M):
  for k in range(N):
    #print("새 좌표", i, k)
    for t in tet:
      #print('새 테트')
      temp = 0
      for j in t:
        #print(i + j[0], k + j[1])
        #print(j)
        if k + j[1] >= N or i + j[0] >= M:
          temp = 0
          break
        temp += graph[k + j[1]][i + j[0]]
      if temp > curMax:
        curMax = temp
      #print(" 현재 테트", curMax)
      #print('temp', temp)
  

print(curMax)
    
